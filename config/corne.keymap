/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &none      &kp LC(Z)  &kp LC(Y)  &kp LS(LBRC)  &kp LS(RBRC)    &kp LS(CARET)  &kp N7  &kp N8    &kp N9  &kp N0     &kp BSPC
&kp LSHFT  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LS(LPAR)  &kp LS(RPAR)    &kp DOT        &kp N4  &kp N5    &kp N6  &kp PLUS   &kp STAR
&kp LCTRL  &trans     &trans     &trans     &kp LBKT      &kp RBKT        &kp N0         &kp N1  &kp N2    &kp N3  &kp MINUS  &kp FSLH
                                 &kp LGUI   &trans        &kp SPACE       &kp RET        &mo 3   &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL       &kp AT         &kp HASH      &kp DLLR       &kp GRAVE        &kp LC(S)  &kp LG(LS(S))  &kp UP    &kp LA(TAB)  &kp K_COFFEE  &kp BSPC
&kp LCTRL  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(UNDER)  &kp LS(TILDE)    &kp LC(F)  &kp LEFT       &kp DOWN  &kp RIGHT    &none         &kp DEL
&kp LSHFT  &kp BSLH       &kp LS(PIPE)   &kp FSLH      &kp LS(LT)     &kp LS(GT)       &kp LG(C)  &none          &none     &none        &none         &none
                                         &kp LGUI      &mo 3          &kp SPACE        &kp RET    &trans         &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans             &kp K_STOP        &kp K_MUTE       &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp K_PREV         &kp K_PLAY_PAUSE  &kp K_NEXT       &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp K_VOLUME_DOWN  &trans            &kp K_VOLUME_UP  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans             &trans
            >;
        };
    };
};
